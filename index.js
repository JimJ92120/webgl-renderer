(()=>{"use strict";function t(t){return t*Math.PI/180}class e{static projection(t,e,o){return[2/t,0,0,0,0,-2/e,0,0,0,0,2/o,0,-1,1,0,1]}static perspective(t,e,o,i){const n=Math.tan(.5*Math.PI-.5*t),r=1/(o-i);return[n/e,0,0,0,0,n,0,0,0,0,(o+i)*r,-1,0,0,o*i*r*2,0]}static multiply(t,e){const o=t[0],i=t[1],n=t[2],r=t[3],s=t[4],a=t[5],c=t[6],h=t[7],l=t[8],x=t[9],u=t[10],d=t[11],v=t[12],g=t[13],p=t[14],m=t[15],z=e[0],R=e[1],f=e[2],y=e[3],P=e[4],S=e[5],b=e[6],C=e[7],_=e[8],E=e[9],A=e[10],T=e[11],L=e[12],O=e[13],w=e[14],M=e[15];return[z*o+R*s+f*l+y*v,z*i+R*a+f*x+y*g,z*n+R*c+f*u+y*p,z*r+R*h+f*d+y*m,P*o+S*s+b*l+C*v,P*i+S*a+b*x+C*g,P*n+S*c+b*u+C*p,P*r+S*h+b*d+C*m,_*o+E*s+A*l+T*v,_*i+E*a+A*x+T*g,_*n+E*c+A*u+T*p,_*r+E*h+A*d+T*m,L*o+O*s+w*l+M*v,L*i+O*a+w*x+M*g,L*n+O*c+w*u+M*p,L*r+O*h+w*d+M*m]}static inverse(t){const e=t[0],o=t[1],i=t[2],n=t[3],r=t[4],s=t[5],a=t[6],c=t[7],h=t[8],l=t[9],x=t[10],u=t[11],d=t[12],v=t[13],g=t[14],p=t[15],m=x*p,z=g*u,R=a*p,f=g*c,y=a*u,P=x*c,S=i*p,b=g*n,C=i*u,_=x*n,E=i*c,A=a*n,T=h*v,L=d*l,O=r*v,w=d*s,M=r*l,F=h*s,I=e*v,j=d*o,B=e*l,D=h*o,U=e*s,$=r*o,G=m*s+f*l+y*v-(z*s+R*l+P*v),H=z*o+S*l+_*v-(m*o+b*l+C*v),N=R*o+b*s+E*v-(f*o+S*s+A*v),k=P*o+C*s+A*l-(y*o+_*s+E*l),V=1/(e*G+r*H+h*N+d*k);return[V*G,V*H,V*N,V*k,V*(z*r+R*h+P*d-(m*r+f*h+y*d)),V*(m*e+b*h+C*d-(z*e+S*h+_*d)),V*(f*e+S*r+A*d-(R*e+b*r+E*d)),V*(y*e+_*r+E*h-(P*e+C*r+A*h)),V*(T*c+w*u+M*p-(L*c+O*u+F*p)),V*(L*n+I*u+D*p-(T*n+j*u+B*p)),V*(O*n+j*c+U*p-(w*n+I*c+$*p)),V*(F*n+B*c+$*u-(M*n+D*c+U*u)),V*(O*x+F*g+L*a-(M*g+T*a+w*x)),V*(B*g+T*i+j*x-(I*x+D*g+L*i)),V*(I*a+$*g+w*i-(U*g+O*i+j*a)),V*(U*x+M*i+D*a-(B*a+$*x+F*i))]}static translation(t,e,o){return[1,0,0,0,0,1,0,0,0,0,1,0,t,e,o,1]}static xRotation(t){const e=Math.cos(t),o=Math.sin(t);return[1,0,0,0,0,e,o,0,0,-o,e,0,0,0,0,1]}static yRotation(t){const e=Math.cos(t),o=Math.sin(t);return[e,0,-o,0,0,1,0,0,o,0,e,0,0,0,0,1]}static zRotation(t){const e=Math.cos(t),o=Math.sin(t);return[e,o,0,0,-o,e,0,0,0,0,1,0,0,0,0,1]}static scaling(t,e,o){return[t,0,0,0,0,e,0,0,0,0,o,0,0,0,0,1]}static translate(t,o,i,n){return e.multiply(t,e.translation(o,i,n))}static xRotate(t,o){return e.multiply(t,e.xRotation(o))}static yRotate(t,o){return e.multiply(t,e.yRotation(o))}static zRotate(t,o){return e.multiply(t,e.zRotation(o))}static scale(t,o,i,n){return e.multiply(t,e.scaling(o,i,n))}static transformVector(t,e){let o=[];for(let i=0;i<4;++i){o[i]=0;for(let n=0;n<4;++n)o[i]+=e[n]*t[4*n+i]}return o}}const o=e,i=class{constructor(t,e){this.options={width:500,height:500,backgroundColor:[0,0,0,1]},this.$canvas=t,this.context=this.$canvas.getContext("webgl2"),this.options=Object.assign(Object.assign({},this.options),e),this.resizeCanvas(),this.clearCanvas()}renderTriangles(t,e,o,i){const{attributesData:n,verticesCount:r}=t,s=this.createProgram(this.createShader(WebGL2RenderingContext.VERTEX_SHADER,e),this.createShader(WebGL2RenderingContext.FRAGMENT_SHADER,o));this.context.useProgram(s);const a=this.context.getUniformLocation(s,"u_matrix");this.context.uniformMatrix4fv(a,!1,i),Object.keys(n).map((t=>{this.createBuffer(n[t].vertices);const e=this.context.getAttribLocation(s,t);this.context.vertexAttribPointer(e,n[t].vertexSize,this.context.FLOAT,!1,0,0),this.context.enableVertexAttribArray(e)})),this.context.drawArrays(this.context.TRIANGLES,0,r)}clearCanvas(){this.context.clearColor(...this.options.backgroundColor),this.context.clearDepth(1),this.context.enable(this.context.DEPTH_TEST),this.context.depthFunc(this.context.LEQUAL),this.context.clear(this.context.COLOR_BUFFER_BIT|this.context.DEPTH_BUFFER_BIT)}resizeCanvas(){const{width:t,height:e}=this.options;this.$canvas.width=t,this.$canvas.height=e,this.context.viewport(0,0,t,e)}createShader(t,e){const o=this.context.createShader(t);return this.context.shaderSource(o,e),this.context.compileShader(o),this.context.getShaderParameter(o,this.context.COMPILE_STATUS)?o:(console.log(this.context.getShaderInfoLog(o)),this.context.deleteShader(o),null)}createProgram(t,e){const o=this.context.createProgram();return this.context.attachShader(o,t),this.context.attachShader(o,e),this.context.linkProgram(o),this.context.getProgramParameter(o,this.context.LINK_STATUS)?o:(console.log(this.context.getProgramInfoLog(o)),this.context.deleteProgram(o),null)}createBuffer(t){const e=this.context.createBuffer();return this.context.bindBuffer(this.context.ARRAY_BUFFER,e),this.context.bufferData(this.context.ARRAY_BUFFER,new Float32Array(t),this.context.STATIC_DRAW),e}};class n{constructor(t,e){this.$container=document.querySelector(`#${t}`),this.title=e}render(){this.$container.innerHTML=`\n  <h1>${this.title}</h1>\n  \n  <canvas id="scene" />\n    `}}class r{}r.vertexShader="#version 300 es\nin vec4 a_position;\nin vec4 a_color;\n\nuniform mat4 u_matrix;\n\nout vec4 vertex_Color;\n\nvoid main() {\n  gl_Position = u_matrix * a_position;\n\n  vertex_Color = a_color;\n}\n  ",r.fragmentShader="#version 300 es\n  precision highp float;\n\n  in vec4 vertex_Color;\n  \n  out vec4 outColor;\n \n  void main() {\n    outColor = vertex_Color;\n  }\n";const s=r;function a(t){const e=o.translate(o.xRotation(Math.PI),-50,-75,-15);for(var i=0;i<t.length;i+=3){var n=o.transformVector(e,[t[i+0],t[i+1],t[i+2],1]);t[i+0]=n[0],t[i+1]=n[1],t[i+2]=n[2]}return t}function c(t,e){const[o,i]=t.reduce(((t,e)=>[[...t[0],...e.verticesPositions[0],...e.verticesPositions[1],...e.verticesPositions[2]],[...t[1],...e.color,...e.color,...e.color]]),[[],[]]);return{attributesData:{a_color:{vertices:i,vertexSize:4},a_position:{vertices:a(o),vertexSize:e}},verticesCount:o.length*e,position:t[0].position,rotation:t[0].rotation}}function h(t,e){const o=[[0,0,0],[0,100,0],[100,100,0],[100,0,0]];return c(t.reduce(((t,e)=>[...t,Object.assign(Object.assign({},e),{verticesPositions:(e.verticesPositions||o).slice(0,3)}),Object.assign(Object.assign({},e),{verticesPositions:[(e.verticesPositions||o)[0],...(e.verticesPositions||o).slice(2,4)]})]),[]),e)}function l(t,e){const{position:o,colors:i,rotation:n,size:r}=t,s=[[0,0,0],[0,r.y,0],[r.x,r.y,0],[r.x,0,0],[0,0,r.z],[0,r.y,r.z],[r.x,r.y,r.z],[r.x,0,r.z]];return[{position:[o[0],o[1],o[2]],verticesPositions:[s[0],s[3],s[7],s[4]],rotation:n,color:i[0]},{position:[o[0],o[1],o[2]],verticesPositions:[s[0],s[1],s[5],s[4]],rotation:n,color:i[1]},{position:[o[0],o[1],o[2]],verticesPositions:s.slice(0,4),rotation:n,color:i[2]},{position:[o[0],o[1],o[2]],verticesPositions:[s[3],s[2],s[6],s[7]],rotation:{x:n.x,y:n.y,z:n.z},color:i[3]},{position:[o[0],o[1],o[2]],verticesPositions:[s[1],s[2],s[6],s[5]],rotation:n,color:i[4]},{position:[o[0],o[1],o[2]],verticesPositions:s.slice(4,8),rotation:n,color:i[5]}].map((t=>h([t],e)))}const x={"2d":{Triangle:c,Quadrilateral:h},"3d":{Hexahedron:l,Cube:function(t,e){const{size:o}=t;return l(Object.assign(Object.assign({},t),{size:{x:o,y:o,z:o}}),e)}},render(e,i,n,r,s){const a=i=>{var a,c,h;e.renderTriangles(i,n,r,(a=s,c=i.position,h=i.rotation,a=o.translate(a,c[0],c[1],c[2]),a=o.xRotate(a,t(h.y)),a=o.yRotate(a,t(h.x)),o.zRotate(a,t(h.z))))};Array.isArray(i)?i.map(a):a(i)}},u={WHITE:[1,1,1,1],GREEN:[0,1,0,1],RED:[1,0,0,1],ORANGE:[1,.5,0,1],YELLOW:[1,1,0,1],BLUE:[0,.5,1,1]},d={width:800,height:600,pixelSize:100,backgroundColor:[.5,.5,.5,1]},v={radius:200,aspect:d.width/d.height,zNear:1,zFar:2e3,fieldOfView:t(90),angle:t(-10)};window.addEventListener("DOMContentLoaded",(()=>{const t=new n("app-container","WebGL Renderer");t.render(),function(t,e,o){let i={x:0,y:0,z:0};setInterval((()=>{t.clearCanvas(),i.x++,i.y++,i.z++,[x["2d"].Triangle([{position:[100,0,0],verticesPositions:[[0,0,100],[100,0,100],[0,0,0]],rotation:{x:0,y:0,z:0},color:u.ORANGE}],3),x["2d"].Quadrilateral([{position:[100,100,0],rotation:{x:0,y:0,z:0},color:u.BLUE}],3),x["3d"].Cube({position:[0,0,0],size:o,rotation:i,colors:Object.values(u)},3),x["3d"].Hexahedron({position:[100,-200,0],size:{x:100,y:50,z:200},rotation:{x:0,y:0,z:0},colors:Object.values(u)},3)].map((o=>{x.render(t,o,s.vertexShader,s.fragmentShader,e)}))}),100)}(new i(t.$container.querySelector("#scene"),{width:d.width,height:d.height,backgroundColor:d.backgroundColor}),o.multiply(o.perspective(v.fieldOfView,v.aspect,v.zNear,v.zFar),o.inverse(o.translate(o.yRotation(v.angle),d.pixelSize/2,-d.pixelSize/2,1.5*v.radius))),d.pixelSize)}))})();